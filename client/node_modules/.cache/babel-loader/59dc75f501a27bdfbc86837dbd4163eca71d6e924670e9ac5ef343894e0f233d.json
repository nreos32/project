{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\niko\\\\Desktop\\\\Github Clones\\\\ptcg-playground-1\\\\ptcg-playground-1\\\\client\\\\src\\\\pages\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const navigate = useNavigate();\n  const user = useSelector(state => state.auth.user);\n  const [history, setHistory] = useState([]);\n  const [command, setCommand] = useState(\"\");\n\n  // Command handling: supports 'give <userId> <cardId> [quantity]'\n  const handleCommandKey = async e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      if (!command.trim()) return;\n      const parts = command.trim().split(/\\s+/);\n      const cmd = parts[0].toLowerCase();\n      let output = \"\";\n      if (cmd === \"give\" || cmd === \"/give\") {\n        const usernameArg = parts[1];\n        const cardId = parseInt(parts[2], 10);\n        const quantity = parts[3] ? parseInt(parts[3], 10) : 1;\n        if (!usernameArg || isNaN(cardId) || isNaN(quantity)) {\n          output = \"Usage: give|/give <username> <cardId> [quantity]\";\n        } else {\n          try {\n            const res = await fetch(\"http://localhost:5000/api/collection/give\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                username: usernameArg,\n                cardId,\n                quantity\n              })\n            });\n            const data = await res.json();\n            if (!res.ok) throw new Error(data.error || \"Failed to give card\");\n            output = `Gave ${quantity} of card ${cardId} to user ${usernameArg}`;\n          } catch (err) {\n            output = `Error: ${err.message}`;\n          }\n        }\n      } else if (cmd === \"ban\" || cmd === \"/ban\") {\n        const usernameArg = parts[1];\n        if (!usernameArg) {\n          output = \"Usage: ban|/ban <username>\";\n        } else {\n          try {\n            const res = await fetch(\"http://localhost:5000/api/auth/ban\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                username: usernameArg\n              })\n            });\n            const data = await res.json();\n            if (!res.ok) throw new Error(data.error || \"Failed to ban user\");\n            output = data.message;\n          } catch (err) {\n            output = `Error: ${err.message}`;\n          }\n        }\n      } else if (cmd === \"unban\" || cmd === \"/unban\") {\n        const usernameArg = parts[1];\n        if (!usernameArg) {\n          output = \"Usage: unban|/unban <username>\";\n        } else {\n          try {\n            const res = await fetch(\"http://localhost:5000/api/auth/unban\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                username: usernameArg\n              })\n            });\n            const data = await res.json();\n            if (!res.ok) throw new Error(data.error || \"Failed to unban user\");\n            output = data.message;\n          } catch (err) {\n            output = `Error: ${err.message}`;\n          }\n        }\n      } else if (cmd === \"help\" || cmd === \"/help\") {\n        output = \"Available commands:\\n\" + \"- give, /give <username> <cardId> [quantity]\\n\" + \"- ban, /ban <username>\\n\" + \"- unban, /unban <username>\\n\" + \"- help\";\n      } else {\n        output = `Unknown command: ${cmd}`;\n      }\n      setHistory(h => [...h, {\n        cmd: command,\n        output\n      }]);\n      setCommand(\"\");\n    }\n  };\n\n  // If user is not admin, redirect\n  if (!user || user.username !== \"admin\") {\n    navigate(\"/\", {\n      replace: true\n    });\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"24px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Console\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"#000\",\n        color: \"#0f0\",\n        padding: \"12px\",\n        height: \"400px\",\n        overflowY: \"auto\",\n        fontFamily: \"monospace\",\n        whiteSpace: \"pre-wrap\"\n      },\n      children: history.map((entry, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"> \", entry.cmd]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: entry.output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: command,\n      onChange: e => setCommand(e.target.value),\n      onKeyDown: handleCommandKey,\n      placeholder: \"Enter command...\",\n      style: {\n        width: \"100%\",\n        padding: \"8px\",\n        marginTop: \"8px\",\n        fontFamily: \"monospace\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(Admin, \"rq89Fsdop7rpk92U/P/juYrXkr4=\", false, function () {\n  return [useNavigate, useSelector];\n});\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useSelector","useNavigate","jsxDEV","_jsxDEV","Admin","_s","navigate","user","state","auth","history","setHistory","command","setCommand","handleCommandKey","e","key","preventDefault","trim","parts","split","cmd","toLowerCase","output","usernameArg","cardId","parseInt","quantity","isNaN","res","fetch","method","headers","body","JSON","stringify","username","data","json","ok","Error","error","err","message","h","replace","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","background","color","height","overflowY","fontFamily","whiteSpace","map","entry","i","type","value","onChange","target","onKeyDown","placeholder","width","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/niko/Desktop/Github Clones/ptcg-playground-1/ptcg-playground-1/client/src/pages/Admin.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Admin = () => {\r\n  const navigate = useNavigate();\r\n  const user = useSelector((state) => state.auth.user);\r\n  const [history, setHistory] = useState([]);\r\n  const [command, setCommand] = useState(\"\");\r\n\r\n  // Command handling: supports 'give <userId> <cardId> [quantity]'\r\n  const handleCommandKey = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      if (!command.trim()) return;\r\n      const parts = command.trim().split(/\\s+/);\r\n      const cmd = parts[0].toLowerCase();\r\n      let output = \"\";\r\n      if (cmd === \"give\" || cmd === \"/give\") {\r\n        const usernameArg = parts[1];\r\n        const cardId = parseInt(parts[2], 10);\r\n        const quantity = parts[3] ? parseInt(parts[3], 10) : 1;\r\n        if (!usernameArg || isNaN(cardId) || isNaN(quantity)) {\r\n          output = \"Usage: give|/give <username> <cardId> [quantity]\";\r\n        } else {\r\n          try {\r\n            const res = await fetch(\r\n              \"http://localhost:5000/api/collection/give\",\r\n              {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                  username: usernameArg,\r\n                  cardId,\r\n                  quantity,\r\n                }),\r\n              }\r\n            );\r\n            const data = await res.json();\r\n            if (!res.ok) throw new Error(data.error || \"Failed to give card\");\r\n            output = `Gave ${quantity} of card ${cardId} to user ${usernameArg}`;\r\n          } catch (err) {\r\n            output = `Error: ${err.message}`;\r\n          }\r\n        }\r\n      } else if (cmd === \"ban\" || cmd === \"/ban\") {\r\n        const usernameArg = parts[1];\r\n        if (!usernameArg) {\r\n          output = \"Usage: ban|/ban <username>\";\r\n        } else {\r\n          try {\r\n            const res = await fetch(\"http://localhost:5000/api/auth/ban\", {\r\n              method: \"POST\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify({ username: usernameArg }),\r\n            });\r\n            const data = await res.json();\r\n            if (!res.ok) throw new Error(data.error || \"Failed to ban user\");\r\n            output = data.message;\r\n          } catch (err) {\r\n            output = `Error: ${err.message}`;\r\n          }\r\n        }\r\n      } else if (cmd === \"unban\" || cmd === \"/unban\") {\r\n        const usernameArg = parts[1];\r\n        if (!usernameArg) {\r\n          output = \"Usage: unban|/unban <username>\";\r\n        } else {\r\n          try {\r\n            const res = await fetch(\"http://localhost:5000/api/auth/unban\", {\r\n              method: \"POST\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify({ username: usernameArg }),\r\n            });\r\n            const data = await res.json();\r\n            if (!res.ok) throw new Error(data.error || \"Failed to unban user\");\r\n            output = data.message;\r\n          } catch (err) {\r\n            output = `Error: ${err.message}`;\r\n          }\r\n        }\r\n      } else if (cmd === \"help\" || cmd === \"/help\") {\r\n        output =\r\n          \"Available commands:\\n\" +\r\n          \"- give, /give <username> <cardId> [quantity]\\n\" +\r\n          \"- ban, /ban <username>\\n\" +\r\n          \"- unban, /unban <username>\\n\" +\r\n          \"- help\";\r\n      } else {\r\n        output = `Unknown command: ${cmd}`;\r\n      }\r\n      setHistory((h) => [...h, { cmd: command, output }]);\r\n      setCommand(\"\");\r\n    }\r\n  };\r\n\r\n  // If user is not admin, redirect\r\n  if (!user || user.username !== \"admin\") {\r\n    navigate(\"/\", { replace: true });\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: \"24px\" }}>\r\n      <h2>Console</h2>\r\n      <div\r\n        style={{\r\n          background: \"#000\",\r\n          color: \"#0f0\",\r\n          padding: \"12px\",\r\n          height: \"400px\",\r\n          overflowY: \"auto\",\r\n          fontFamily: \"monospace\",\r\n          whiteSpace: \"pre-wrap\",\r\n        }}\r\n      >\r\n        {history.map((entry, i) => (\r\n          <div key={i}>\r\n            <div>&gt; {entry.cmd}</div>\r\n            <div>{entry.output}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={command}\r\n        onChange={(e) => setCommand(e.target.value)}\r\n        onKeyDown={handleCommandKey}\r\n        placeholder=\"Enter command...\"\r\n        style={{\r\n          width: \"100%\",\r\n          padding: \"8px\",\r\n          marginTop: \"8px\",\r\n          fontFamily: \"monospace\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}